generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider        = "mysql"
  url             = env("DATABASE_URL")
  relationMode    = "prisma"
}

model Profile {
  id              Int         @id @default(autoincrement())
  created_at      DateTime    @default(now()) @db.Timestamp(0)
  updated_at      DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  uid             String      @unique @db.VarChar(28)
  email           String      @db.VarChar(255)
  display_name    String      @db.VarChar(255)
  avatar_url      String      @db.Text
  payments        Payment[]
  debtors         Debt[]      @relation(name: "debtors")
  creditors       Debt[]      @relation(name: "creditors")
}

model Payment {
  id                      Int         @id @default(autoincrement())
  created_at              DateTime    @default(now()) @db.Timestamp(0)
  updated_at              DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  title                   String      @db.VarChar(100)
  expence                 Int         @db.Int
  sharing_method          String      @db.VarChar(2)
  status                  String      @db.VarChar(2)
  billing_date            DateTime    @db.Timestamp(0)
  creator                 Profile     @relation(fields: [creator_id], references: [id])
  creator_id              Int
  sharings                Sharing[]
  debts                   Debt[]
  image                   Image[]
  comments                Comment[]

  @@index([creator_id])
}

model Sharing {
id                        Int         @id @default(autoincrement())
  created_at              DateTime    @default(now()) @db.Timestamp(0)
  updated_at              DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  payer                   Payment     @relation(fields: [sharing_payment_id], references: [id])
  sharing_payment_id      Int

  @@index([sharing_payment_id])
}

model Debt {
  id                      Int         @id @default(autoincrement())
  created_at              DateTime    @default(now()) @db.Timestamp(0)
  updated_at              DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  debtor                  Profile     @relation(name: "debtors", fields: [debtor_id], references: [id])
  debtor_id               Int
  creditor                Profile     @relation(name: "creditors", fields: [creditor_id], references: [id])
  creditor_id             Int
  debt_payment            Payment     @relation(fields: [debt_payment_id], references: [id])
  debt_payment_id         Int

  @@index([debtor_id])
  @@index([creditor_id])
  @@index([debt_payment_id])
}

model Image {
  id                      Int         @id @default(autoincrement())
  created_at              DateTime    @default(now()) @db.Timestamp(0)
  updated_at              DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  image_payment           Payment     @relation(fields: [image_payment_id], references: [id])
  image_payment_id        Int

  @@index([image_payment_id])
}

model Comment {
  id                      Int         @id @default(autoincrement())
  created_at              DateTime    @default(now()) @db.Timestamp(0)
  updated_at              DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  comment_payment         Payment     @relation(fields: [comment_payment_id], references: [id])
  comment_payment_id      Int

  @@index([comment_payment_id])
}
